const storeConfig = require('./storeConfig')

const adapters = {
  mysql: require('./adapters/mysql'),
  sqsQueue: require('./adapters/sqsQueue'),
  dynamodb: require('./adapters/dynamodb')
}
const getParse = require('./getParse')

module.exports = {
  getConfig: async (storeName = 'primary') => {
    const config = await storeConfig(storeName)
    return config
  },
  get: async ({ storeName = 'primary', name, idName, id, relation, query }) => {
    const config = await storeConfig(storeName)
    const filters = getParse.filters({ query })
    const slice = getParse.slice({ query })
    return await adapters[config.adapter].get({
      objectName: name,
      id,
      idName,
      relation,
      filters,
      slice,
      config
    })
  },
  add: async ({ storeName = 'primary', name, object }) => {
    const config = await storeConfig(storeName)
    return await adapters[config.adapter].add({
      objectName: name,
      objectData: object,
      config
    })
  },
  update: async ({ storeName = 'primary', name, idName, id, object }) => {
    const config = await storeConfig(storeName)
    return await adapters[config.adapter].update({
      objectName: name,
      idName,
      id,
      objectData: object,
      config
    })
  },
  delete: async ({ storeName = 'primary', name, idName, id, object }) => {
    const config = await storeConfig(storeName)
    return await adapters[config.adapter].delete({
      objectName: name,
      idName,
      id,
      objectData: object,
      config
    })
  }
}
