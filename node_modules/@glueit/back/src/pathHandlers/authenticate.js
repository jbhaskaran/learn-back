const { sign } = require('../jwt')
const crypto = require('crypto')
const argon = require('argon2')

module.exports = {
  add: async ({ context, object, store }) => {
    const { password, email } = object

    const users = await store.get({ name: 'users', query: { email } })
    const user = users[0]
    const { password: hash } = user || {}

    const id = crypto.randomBytes(20).toString('hex')
    const randomGeneratedHash = await new Promise(res => {
      argon.hash(id).then(result => res(result))
      // TODO: handle rej
    })

    const verified = await new Promise(res => {
      argon
        .verify(
          hash ? Buffer.from(hash, 'hex').toString() : randomGeneratedHash,
          password
        )
        .then(result => res(result))
      // TODO: handle rej
    })

    if (!hash || !verified) {
      context.status = 401
    } else {
      const { email } = user
      context.status = 200
      context.body = {
        token: sign({ email }),
        user: { email: user.email, verified: user.verified, id: user.id }
      }
    }
  }
}
